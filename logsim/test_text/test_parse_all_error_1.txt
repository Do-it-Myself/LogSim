/ Example circuit with wrong content inside/
DEVICE {
DEVICE: DTYPE; # EXPECT_IDENTIFIER
D2: CTYPE; # EXPECT_INPUT_DEVICE
G0: D; # EXPECT_INPUT_DEVICE
G1: NOR, 2;
G2- XOR; # EXPECT_COLON
G3: NAND, 3000; # EXPECT_VARIABLE_INPUT_NUMBER
G4: AND. 2; # EXPECT_COMMA
G5: OR, 2! # EXPECT_SEMICOLON
G6: OR, 2;
G6: NAND, 2; # DEVICE_PRESENT (semantic, won't be checked)
}

/ Inputs /
SWITCH {
A: 0;
B: 0;
C: 1;
D: 2; # EXPECT_INITIAL_STATE
E: 0;
}

CLOCK {
CLK1: 10;
CLK2: 00001; # EXPECT_CLOCK_CYCLE
}

/ Initial monitoring points /
MONITOR { 
S1: D1.QBARS; # EXPECT_PIN_IN_OR_OUT
S2: G2- # EXPECT_FULL_STOP_OR_SEMICOLON
S3: G4;
S3: G1; # MONITOR_PRESENT (semantic, won't be checked)
f; # EXPECT_COLON
g: G6; # OUTPUT_PORT_ABSENT (semantic, won't be checked)
}

/ Internal connections of the circuit /
CONNECTION {
CLK1 > D1.CLK;
A > D1.SEC; # EXPECT_PIN_IN
B => D1.CLEAR; # EXPECT_FULL_STOP_OR_ARROW
C > D1-DATA; # EXPECT_FULL_STOP
CLK1 > D2; # EXPECT_FULL_STOP
A > D2.SETS; # EXPECT_PIN_IN
B > D2.SET; # INPUT_CONNECTED (semantic, won't be checked)
B > G1.I1000; # EXPECT_PIN_IN
B > D2.CLEAR;
D1>Q > D2.DATA; # EXPECT_FULL_STOP
D1.Q > G1.I1;
D2.Q > G1.I2;
D > G1.I3;
G1 > G2.I1;
E > G2.I2;
A > G3.I1;
B > G3.I1; # INPUT_CONNECTED (semantic, won't be checked)
B > G3.I2;
C > G3.I3;
G2 > G4.I1;
G3 > G4.I2;
G4 > G5.I1;
D2.Q > G5.I2;
F > G6.I3; # OUTPUT_PORT_ABSENT (semantic, won't be checked)
A > G10.I1; # OUTPUT_DEVICE_ABSENT
D10.Q > G5.I2; # INPUT_DEVICE_ABSENT
 # EXPECT_CLOSE_CURLY_BRACKET